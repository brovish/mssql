USE tempdb;

SET NOCOUNT ON;
SET STATISTICS IO ON;
--IF OBJECT_ID(N'DBO.ORDERS', N'U') IS NOT NULL DROP TABLE dbo.ORDERS
--IF OBJECT_ID(N'dbo.CUSTOMERS', N'U') IS NOT NULL DROP TABLE dbo.CUSTOMERS

--CREATE TABLE dbo.CUSTOMERS
--(
--	CUSTID CHAR(5) NOT NULL,
--	CITY VARCHAR(10) NOT NULL,
--	CONSTRAINT PK_CUSTOMERS PRIMARY KEY(CUSTID)
--);


--CREATE TABLE dbo.ORDERS
--(
--	ORDERID INT NOT NULL,
--	CUSTID CHAR(5) NULL,
--	CONSTRAINT PK_ORDERS PRIMARY KEY(ORDERID),
--	CONSTRAINT FK_ORDERS_CUSTOMERS FOREIGN KEY(CUSTID)
--		REFERENCES DBO.CUSTOMERS(CUSTID)
--);


--INSERT INTO dbo.CUSTOMERS(CUSTID,CITY)
--VALUES
--  ('FISSA', 'Madrid'),
--  ('FRNDO', 'Madrid'),
--  ('KRLOS', 'Madrid'),
--  ('MRPHS', 'Zion'  );

--  INSERT INTO dbo.Orders(orderid, custid) VALUES
--  (1, 'FRNDO'),
--  (2, 'FRNDO'),
--  (3, 'KRLOS'),
--  (4, 'KRLOS'),
--  (5, 'KRLOS'),
--  (6, 'MRPHS'),
--  (7, NULL   );

--SELECT 
--C.CUSTID, COUNT(O.ORDERID)
--FROM dbo.CUSTOMERS AS C
--LEFT OUTER JOIN dbo.ORDERS AS O
--	ON C.CUSTID = O.CUSTID
--WHERE C.CITY = N'MADRID'
--GROUP BY C.CUSTID
--HAVING COUNT(*) < 3

----JUST MUCKING AROUND...NOT THE SOLUTION!
--SELECT 
--*
--FROM dbo.CUSTOMERS AS C
--WHERE C.CITY = N'MADRID' AND (SELECT COUNT(*) FROM dbo.ORDERS AS O WHERE O.CUSTID = C.CUSTID ) < 3

SELECT
*, MAX(O.ORDERID) OVER()
FROM dbo.Orders AS O



















