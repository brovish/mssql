USE AdventureWorks2012;
GO

--CREATE FUNCTION dbo.GetNums(@low AS BIGINT, @high AS BIGINT) RETURNS TABLE
--AS
--RETURN
--  WITH
--    L0   AS (SELECT c FROM (SELECT 1 UNION ALL SELECT 1) AS D(c)),
--    L1   AS (SELECT 1 AS c FROM L0 AS A CROSS JOIN L0 AS B),
--    L2   AS (SELECT 1 AS c FROM L1 AS A CROSS JOIN L1 AS B),
--    L3   AS (SELECT 1 AS c FROM L2 AS A CROSS JOIN L2 AS B),
--    L4   AS (SELECT 1 AS c FROM L3 AS A CROSS JOIN L3 AS B),
--    L5   AS (SELECT 1 AS c FROM L4 AS A CROSS JOIN L4 AS B),
--    Nums AS (SELECT ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS rownum
--            FROM L5)
--  SELECT TOP(@high - @low + 1) @low + rownum - 1 AS n
--  FROM Nums
--  ORDER BY rownum;
--GO


;WITH CTE AS
(
	SELECT N.n AS UQ, DATEADD(DAY, N.n, DATEFROMPARTS(1990,1,1)) AS DT
		FROM dbo.GetNums(0,DATEDIFF(DAY, DATEFROMPARTS(1990,1,1), DATEFROMPARTS(2015,1,1))) AS N
)
SELECT C.UQ AS UQ, C.DT, DATENAME(MONTH, C.DT) + DATENAME(YEAR, C.DT)  AS M, DATEFROMPARTS(YEAR(C.DT), MONTH(C.DT), 1) DM, 
		DATENAME(WEEKDAY, C.DT) AS WD,  CASE WHEN DATENAME(WEEKDAY, C.DT) NOT IN ('SUNDAY', 'SATURDAY') THEN 1 ELSE 0 END AS ISBUSINESSDAY
		INTO #WORKDAYS
		FROM CTE AS C


SELECT YEAR(W.DT), COUNT(*) AS BDAYS
FROM #WORKDAYS AS W
WHERE W.ISBUSINESSDAY =1
GROUP BY YEAR(W.DT)
ORDER BY YEAR(W.DT)


--TOT SALARY BY EMPS PERIOD FROM 2008 TO 2012
--GET LIST OF EMPS WITH HAVE A VALID PAY RATE OVER THAT PERIOD
SELECT EP.BusinessEntityID, EP.Rate, EP.RateChangeDate, 
		ROW_NUMBER() OVER(PARTITION BY EP.BusinessEntityID ORDER BY EP.RateChangeDate) AS RN
INTO #T
FROM HumanResources.EmployeePayHistory AS EP
WHERE EP.RateChangeDate < '20130101'
ORDER BY EP.BusinessEntityID, RN

--ADD THE END DATE PERIOD FOR EACH RATECHANGEPERIOD
SELECT * 
INTO #TT
FROM #T AS T
OUTER APPLY (SELECT T1.RateChangeDate AS RATEENDDATE FROM #T AS T1 WHERE T.BusinessEntityID = T1.BusinessEntityID AND T1.RN = T.RN + 1) AS TEMP

--CALCULATE THE NUMBER OF BUSINESS DAYS FOR EACH RATE CHANGE PERIOD THAT FALLS WITHIN THE TIME 2008 TO 2012

SELECT TT.BusinessEntityID, TT.Rate, TT.RateChangeDate, TT.RATEENDDATE, TT.RN 
		, SALARYYEAR
		,SUM(F) AS TOTALBUSINESSDAYS
INTO #CTE2
FROM #TT AS TT 
OUTER APPLY (SELECT 8 AS HRSPERDAY) AS TEMP2
OUTER APPLY (SELECT YEAR(W.DT) AS SALARYYEAR
					, CASE 
						WHEN (W.DT BETWEEN TT.RateChangeDate AND ISNULL (TT.RateEndDate, '20121231')) AND W.DT >= TT.RateChangeDate THEN 1 ELSE 0
					END AS F
					,W.DT AS DATE 
			 FROM #WORKDAYS AS W 
			 WHERE W.DT BETWEEN '20080101' AND '20121231' AND W.ISBUSINESSDAY = 1
			) AS TEMP4
GROUP BY TT.BusinessEntityID, TT.Rate, TT.RateChangeDate, TT.RATEENDDATE, TT.RN, SALARYYEAR
ORDER BY TT.BusinessEntityID

SELECT CC.BusinessEntityID, SALARYYEAR, SUM(CC.TOTALBUSINESSDAYS * 8 * CC.Rate) AS TOTSALARY
INTO #TTT
FROM #CTE2 AS CC
GROUP BY CC.BusinessEntityID, SALARYYEAR
ORDER BY CC.BusinessEntityID


--QUESTTION 45 FOR YEAR 2012
SELECT EDPH.DepartmentID, MIN(TOTSALARY) AS MINSAL, MAX(TOTSALARY) AS MAXSAL, AVG(TOTSALARY) AS AVGSAL
FROM #TTT AS TTT
INNER JOIN HumanResources.EmployeeDepartmentHistory AS EDPH ON TTT.BusinessEntityID = EDPH.BusinessEntityID
WHERE SALARYYEAR = 2012
GROUP BY EDPH.DepartmentID